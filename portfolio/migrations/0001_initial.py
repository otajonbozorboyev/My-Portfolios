# Generated by Django 5.1.4 on 2024-12-28 07:55

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the project title', max_length=100)),
                ('year', models.CharField(help_text='Enter the year', max_length=100)),
                ('client', models.CharField(help_text='Enter the client name', max_length=100)),
                ('service', models.CharField(help_text='Enter the service name', max_length=100)),
                ('project_type', models.CharField(help_text='Enter the project type, E.g.: Web Development', max_length=50)),
                ('description', tinymce.models.HTMLField(blank=True, help_text='Write something about the project', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the skill name, E.g.: Python', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the video title', max_length=100)),
                ('link', models.URLField(help_text='Enter the video link')),
                ('thumbnail', models.ImageField(help_text='Enter the video thumbnail', upload_to='image/youtube_thumbnail')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutMe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_me', tinymce.models.HTMLField(blank=True, help_text='Write something about yourself', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='about_me/image')),
                ('my_name', models.CharField(help_text='Enter your name', max_length=100)),
                ('social_media', models.JSONField(blank=True, help_text='Add your social media links', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('skills', models.ManyToManyField(blank=True, help_text='Add your skills', null=True, to='portfolio.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.CharField(help_text='Enter the start year, E.g.: 2005', max_length=4)),
                ('end_year', models.CharField(help_text='Enter the end year, E.g.: 2009', max_length=4)),
                ('degree', models.CharField(help_text='Enter the degree, E.g.: Bachelor of Science', max_length=100)),
                ('university', models.CharField(help_text='Enter the university, E.g.: University of Science', max_length=100)),
                ('description', tinymce.models.HTMLField(help_text='Write something about your education, E.g.: Bachelor of Computer Science')),
                ('about_me', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.aboutme')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.CharField(help_text='Enter the start year, E.g.: 2005', max_length=4)),
                ('end_year', models.CharField(help_text='Enter the end year, E.g.: 2009', max_length=4)),
                ('position', models.CharField(help_text='Enter the position, E.g.: Software Engineer', max_length=100)),
                ('company', models.CharField(help_text='Enter the company, E.g.: Google', max_length=100)),
                ('description', tinymce.models.HTMLField(help_text='Write something about your experience, E.g.: Worked on Google Search Engine')),
                ('about_me', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.aboutme')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload project image', upload_to='project/image')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='portfolio.project')),
            ],
        ),
    ]
